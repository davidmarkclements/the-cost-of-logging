doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title The Cost of Logging

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-backdrop='pines').transwhite
        div(style='text-align: left; margin-top: -2em;')
          h1 The Cost of Logging
          h3 by&nbsp;
            a(href="http://twitter.com/matteocollina") @matteocollina
          h3(style='margin-left:.15em;margin-top: -1em') &&nbsp;&nbsp;
            a(style="display:inline-block;margin-left: -.03em",href="http://twitter.com/davidmarkclements") @davidmarkclem
          br
          a(href="http://nearform.com" style="width: 50%; float: right; margin-bottom: -30em;")
            img(src="./images/nearform.svg")

      section(data-bespoke-backdrop='london').trans
        h2(style='margin-left: 50%; text-align: right; width: 30%') Our story begins in London

      section(data-bespoke-backdrop='nap-mp').trans
        h2(style='color: #eee; padding-left: 40%; padding-bottom: 50%') NET-A-PORTER <br> & <br> MR-PORTER

      section
        h2 Results
        br
        img(src="./images/barchart.png" style="height: 70%")

      section
        h1 Observation
        h2 Disabling logging
        h2 increased throughput

      section
        img(src="./images/bugfix.svg" style="width: 90%")

      section
        h2 The more you log the better
        img(src="./images/shifu.png" style="margin-bottom: -1%")

      section
        h2
          | Perceived time spent
          br
          | logging a line
        h1 0 ms

      section
        h2
          | Actual time spent
          br
          | logging a line
        h1 0.22 ms
        // node is single threaded!

      section
        h2(style='margin-bottom: 1.25em;margin-top: -.5em') One Log Per Request
        h3 target 2000 req/s
        h3 0.22 ms x 2000 req = 440 ms
        h2 660 ms left for processing

      section
        h2(style='margin-bottom: 1.25em;margin-top: -.5em') Ten Logs Per Request
        h3 target 2000 req/s
        h3 0.22 ms x 2000 req x 10 logs = 4400ms
        h2 4400 ms > 1 s

      section
        img(src="./images/kaboom.gif")

      // section
      //  h2 The systemic effect of logging

      section(data-bespoke-backdrop='snail').trans
        h1(style="color: white; margin-left: -10%; margin-right: auto; width: 10%; text-align: left; padding-bottom: 5%") Why so slow?

      section(data-bespoke-backdrop='adapters').trans
        h2(style='margin-left:-30%') Adapters
        h2 of adapters
        h2(style='margin-left:25%') of adapters
        h2(style='margin-left:50%; font-size: 1em') of adapters
        h2(style='margin-left:75%; font-size: 0.5em') of adapters
        h2(style='margin-left:90%; font-size: 0.2em') of adapters

      section(data-bespoke-backdrop='lamp').trans
        h1(style="color: white; margin-left: -10%; margin-right: auto; width: 10%; text-align: left; padding-bottom: 5%")
          | Idea

      section(data-bespoke-backdrop='lamp').trans
        h2(style="color: white; margin-left: auto; margin-right: 0%; width: 30%; text-align: right; padding-bottom: 5%")
          | Let's write a <u><i>fast</i></u> logger!

      section
        img(src="./images/pino.png" style="width: 90%")

      section
        h1 Pino
        h2 Bunyan API

      section
        pre
          code.language-javascript.
            const pino = require('pino')()
            pino.info('hello world')
            pino.debug({
              big: 'object'
            }, 'with message')

      section
        h1 Pino
        h2 10000 ops — 250ms

      section
        h3 target 2000 req/s
        h3 0.025 ms x 2000 req = 50 ms
        h2 950 ms left for processing

      section
        h3 target 2000 req/s
        h3 10 lines per request
        h3 0.025 ms x 2000 req x 10 lines =
        h2 500 ms left for processing

      section
        img(src="./images/bench-basic.svg" style="height: 95%")

      section(data-bespoke-backdrop='tools').trans
        h1(style="color: white;margin-top: -40%") Tools <br>of the Trade

      section
        h1 We
        h1(style='color: red;font-size: 7em;margin-bottom: .25em') ♥
        h1 JSON <span style='color: red'>\n</span>

      section
        pre
          code.language-javascript.
            const split = require('split2')
            process.stdin.pipe(split(JSON.parse))
              .on('data', (obj) => {
                console.log(Object.keys(obj))
              })
        br
        img(src="./images/split2.png")


      section(data-bespoke-backdrop='dragon-scroll').trans
        h1(style="color: white; padding-top: 50%") Secret Sauce(s)

      section
        h1 Secret Sauce
        h2 Avoid JSON.stringify

      section
        h1 Secret Sauce
        h2 %FlattenString

      section
        h1 Secret Sauce
        h2 fast-safe-stringify

      section
        h1 Secret Sauce
        h2 quick-format

      section
        h1 Secret Sauce
        h2
          | Date.now()
          br
          | vs
          br
          | new Date().toISOString()

      section(data-bespoke-backdrop='extreme' style="color: white").trans
        div(style="text-align: right")
          h1 Extreme Mode
          h2 We can go faster

      section
        h1 Extreme Mode
        h2 10000 logs in 100ms
        h2 2x throughput increase

      section
        h3 target 2000 req/s
        h3 10 lines per request
        h3 0.01 ms x 2000 req x 10 lines = 200 ms
        h2 800 ms left for processing

      section
        h1 Extreme Mode
        h2 Trade-off: 4k batching

      section
        pre
          code.language-javascript.
            const pino = require('pino')({
              extreme: true
            })
            pino.info('hello world')
            pino.debug({
              big: 'object'
            }, 'with message')

      section
        h1 How we discovered
        h2 The secret sauce

      section
        h3 0x
        h2 todo - flamegraph gif

      section
        h1 autocannon
        h3 HTTP load tester
        h3 Trival cross platform installation
        h3 Generates 10% more load than alternatives in C

      section
        h1 0x + autocannon
        h3 todo - screenshot of PR showing 0x discovering JSON.stringify bottleneck - maybe do a demo

      section(data-bespoke-backdrop='wv').trans
        h2(style="margin-top: -20%") Pino is more than module

      section(data-bespoke-backdrop='wv').trans
        h2(style="margin-top: -20%") Pino is a way of life

      section
        h1 Pino Philosophy
        h2 Absolute minimum overhead

      section
        h1 Pino Philosophy
        h2 Rotate your logs yourself!

      section
        h1 Pino Philosophy
        h2 Transports are separate processes

      section
        h1 Pino Philosophy
        h2 Want better readability? Post-process
        h3 With <code>pino</code> CLI

      section(data-bespoke-backdrop='integration').trans
        // big thing to just do a shadow
        h1(style="color: white; text-shadow: -2px 0 1px black, 0 2px 1px black, 2px 0 1px black, 0 -2px 1px black;")
          | Server Integration

      section
        h1 Express Pino Logger Demo

      section
        h1 Hapi
        h2 todo code example

      section
        h1 Express
        h2 todo code example

      section
        h1 Restify
        h2 todo code example

      section
        h1 Koa
        h2 todo code example

      section
        h1 http
        h2 todo code example

      section
        h1 Cloudwatch Integration
        h2 todo

      section
        h1 ELK Integration
        h2 todo

      section(data-bespoke-backdrop='ecosystem-impact').trans
        h2(style="margin-top: -20%; color: white; text-shadow: 0px 0px 4px black") Ecosystem Impact

      section
        h2 This presentation
        ul.bullet
          li
            a(href="https://mcollina.github.io/the-cost-of-logging").
              https://mcollina.github.io/the-cost-of-logging
          li
            a(href="https://github.com/mcollina/the-cost-of-logging").
              https://github.com/mcollina/the-cost-of-logging

      section
        img(src='images/me.png' style="width: 95%")
        h3
          a(href='http://github.com/mcollina') http://github.com/mcollina

      section
        h1 Thanks!
        a(href="http://nearform.com" style="width: 20%")
          img(src="./images/nearform.svg")
        br
        p If you need help with Node.js
        br
        h3 <a href="mailto:matteo.collina@nearform.com">matteo.collina@nearform.com</a>
        h3 <a href="http://twitter.com/matteocollina">@matteocollina</a> on Twitter
        h3 <a href="http://www.nearform.com">www.nearform.com</a>

    script(src='build/build.js')
